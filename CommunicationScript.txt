### Mô hình server được mô phỏng theo dạng ngôi nhà
+ Gate : Nơi chấp nhận client, một client sau khi được chấp nhận sẽ được đẩy đến outdoor --- Tương ứng với bước connect ở client.
+ Outdoor : Nơi xử lý những client vô danh. --- Tương ứng giao diện StartGame ở client.
+ Lobby : Nơi xử lý những client đã đăng nhập nhưng chưa vào phòng --- Tương ứng giao diện sảnh đợi ở client.
+ Room : Nơi xử lý những client đã vào phòng --- Tương ứng giao diện room ở client.

### Ngoài ra, trong room còn có một phiên game nếu các người chơi đang chơi game.

### Các kịch bản giao tiếp diễn ra như sau : 

+++ Lưu ý 1 : Tất cả các message "thông báo" gửi về đều có dạng "Success:[tên request],[info]"
       hoặc "Failure:[tên request],[info]". 

+++ Lưu ý 2 : Đối với các yêu cầu (mô tả bên dưới) có thông báo trả về thành công, thì chắc chắn cũng có thông báo thất bại. Hãy chờ cho đến khi nhận được thông báo thành công rồi hãy xử lý yêu cầu đó. 

+++ Lưu ý 3 : Khi client nhận các message "Failure:[tên request],[info]", client có quyền có hiển thị hoặc không hiển thị thông báo ở message.

+ Gate : Không có giao tiếp, chỉ cần connect là sẽ được chuyển tới Outdoor (hay StartGameGui)
+ Outdoor :
	- Đăng nhập : "Login:[username],[password]".
		* Nếu thành công, server gửi về "Success:Login,[username],[money]".
	- Đăng ký   : "Signup:[username],[password]".
		* Nếu thành công, server gửi về "Success:Signup,[username]".

... Sau khi nhận thông báo thành công từ Login ---> Chuyển user đến lobby.

+ Lobby : 
	- Khi vừa vào lobby, user sẽ nhận thêm một message tự động, message này sẽ tiếp tục được gửi nếu có bất kỳ sự thay đổi nào ở lobby:
		"LobbyInfo:[n - số phòng],[số người phòng 0],[tiền cược phòng 0],...,[số người phòng n-1],[tiền cược phòng n - 1]

	- Đăng xuất : "Logout".
		* Nếu thành công, gửi về "Success:Logout"

	- Vào phòng : "JoinRoom:[số phòng(bắt đầu từ 0)]"
		* Nếu thành công, gửi về "Success:JoinRoom"
	
	- Nạp tiền : "Payin:[Code]"
		* Nếu thành công, gửi về "Success:Payin,[số tiền hiện tại]"
		* Có 3 loại code : "ANTN2017" - nạp 10 000, "LTMCB2017" - nạp 20 000 và "UIT2017" - nạp 50 000.

+ Room:
	- Khi vừa vào phòng, user sẽ tự động nhận một message tự động, message này sẽ được gửi nếu có bất kỳ sự thay đổi nào ở room:
		* Bản thân được đánh số là 0, sau đó sẽ được đánh theo thứ tự kim đồng hồ ( người kế trái là 1, người đối diện là 2, người kế phải là 3).
		* "RoomInfo:[tiền cược],[host-index],[name-0],[money-0],[status-0],....,[name-3],[money-3],[status-3]".
		* Nếu user không ở trong phòng thì name,money,status tương ứng là none,0,0.
		* status có 3 dạng: 1 - Chưa sẵn sàng, 2 - Đã sẵn sàng, 3 - Đang chơi.

	- Thoát khỏi room: "JoinLobby"
		* Không có thông báo trả về đối với loại request này.
		* Tuy nhiên, tín hiệu ở đây là "LobbyInfo" sẽ được gửi về ngay sau đó.
	
	- Đặt tiền cược : "BetMoney:[số tiền]"
		* Nếu thành công, gửi về "Success:BetMoney"
		* Đương nhiên, sau đó sẽ gửi về "RoomInfo"
		* (Thêm vào đó) Những client khác ở lobby sẽ nhận được "LobbyInfo"
	
	- Sẵn sàng : "Ready"
		* Nếu thành công, gửi về "Success:Ready"
		* Đương nhiên, sau đó sẽ gửi về "RoomInfo"
	
	- Hủy sẵn sàng : "UnReady"
		* Nếu thành công, gửi về "Success:UnReady"
		* Đương nhiên, sau đó sẽ gửi về "RoomInfo"
	
	- Bắt đầu chơi : "Start"
		* Nếu thành công, trả về "Success:Start"
	
+ Game:
	- Game sẽ bắt đầu sau khi nhận được thông báo "Success:Start". Khi vừa bắt đầu, những người chơi trong phòng sẽ tự động nhận được một message, message này sẽ tiếp tục được gửi nếu có bất kỳ sự thay đổi nào trong quá trình chơi game.
		* "GameInfo":<thông tin bộ bài 0>,<số lá bài 1>,<số lá bài 2>,<số lá bài 3>,<thông tin bài trên bàn>,<chỉ số người đang tới lượt>,<cho phép bỏ lượt>"
		* Các số thứ tự có ý nghĩa giống ở "RoomInfo".
		* Thông tin bộ bài gồm : "<n - số lượng bài>,<lá bài 0>, <lá bài 1>,...,<lá bài n - 1>". Các lá bài đã được sắp xếp từ nhỏ đến lớn.
			** <lá bài - i> là một số nguyên [0 - 52). Sử dụng class Card trong server để Parse số này. Sau đó lấy 2 thuộc tính là number và suit.
		* Người chơi không ở trong phòng, hoặc không chơi thì <số là bài - i> == 0
		* <cho phép bỏ lượt> có 2 giá trị : 0 - false, 1 - true.
		* <Thông tin bài trên bàn> bao gồm thông tin bộ bài trên bàn trước đó + thông tin bộ bài vừa đánh ra.

	- Đánh bài : "Play:<thông tin bộ bài>"
		* Thông tin bộ bài có dạng như ở "GameInfo".
		* Nếu thành công, gửi về "Success:Play".

	- Bỏ lượt : "Pass"
		* Nếu thành công, gửi về "Success:Pass".

	- Nếu có bất kỳ người chơi nào vừa đánh bài, kể cả bản thân, client sẽ nhận được message:
		* "Play:<chỉ số người chơi>,<thông tin bộ bài>"
		* <chỉ số người chơi> có dạng giống ở "RoomInfo" và <thông tin bộ bài> có dạng giống ở GameInfo.
		* Đương nhiên, ngay sau đó, "GameInfo" cũng sẽ được gửi về.

	- Nếu có bất kỳ sự thay đổi về tiền của các người chơi trong phòng, một message sẽ tự động được gửi:
		* "Money:<sự thay đổi tiền - 0>,...,<sự thay đổi tiền - 3>".
		* Chỉ số trên có ý nghĩa giống với chỉ số người chơi ở "RoomInfo".
		* Nếu số tiền là dương, người đó được cộng tiền, nếu số tiền âm, người đó bị trừ tiền.
		* Đương nhiên, "RoomInfo" sẽ được gửi ngay sau đó để cập nhật số tiền.

	- Nếu game kết thúc, người chơi sẽ nhận được thông báo:
		* "Winner:<chỉ số người thắng>".
		* <chỉ số người thắng> có cùng dạng với <chỉ số người chơi> ở "RoomInfo"
		* Sau đó, client tự cập nhật lại giao diện phòng (xóa tất cả lá bài đang hiển thị).
		* Đương nhiên, ngay sau đó "Money" và "GameInfo" sẽ được gửi.